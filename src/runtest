#!/bin/sh

test=`echo $1 | cut -d. -f1`
ext=`echo $1 | cut -d. -f2`
case $ext in
    ctst) log=clog; out=cout; ref=cref; ;;
    *)    log=log;  out=out; ref=ref; ;;
esac
valgrind=$2
BASILISK_WIKI=`echo $BASILISK | sed 's:/src$::'`
dir=`echo $PWD | sed "s:$BASILISK_WIKI/::"`

script()
{
    cat <<EOF
rm -f $test.c
if test -f fail; then
    exit 1
fi
cat warn
test -s warn || rm -f warn
if $valgrind ./$test 2> $log > $out; then
    if test -f $test.$ref; then
      ref=$ref
    else
      ref=ref
    fi
    if test -f $test.\$ref; then
        echo diff $log $test.\$ref > fail
        diff $log $test.\$ref >> fail && rm -f fail
        rm -f $test.\$ref
    fi
else
    cp -f $log fail
fi
if test -f fail; then
    exit 1
fi
touch pass
EOF
}

expirecache()
{
    rm -f $BASILISK_WIKI/cache/$dir/$test.c.page
}

# run locally
locally()
{
    echo \[$test.$ext\]
    qcc $CFLAGS -o $test/$test $test.c $LIBS -lm > $test/warn 2>&1 \
	|| mv -f $test/warn $test/fail
    cd $test
    script | sh
    expirecache
    cd ..
}

# compile/run on a remote "sandbox"
remotely()
{
    rhost=$1
    chksum=`$GENSUM $test.s | cut -d' ' -f1`.$ext
    cd $test
    mkdir $chksum
    qcc -source $CFLAGS $test.c
    mv -f _$test.c $chksum/$test.c
    cp -f $test.*ref $chksum 2> /dev/null || true
    PCFLAGS=`echo $CFLAGS | sed 's/-grid=[^-]*//'`
    cat <<EOF >$chksum/$test.sh
#!/bin/sh
\$CC99 $PCFLAGS -I\$HOME/include -o $test $test.c -L\$HOME/lib $LIBS -lm > warn 2>&1 || mv -f warn fail
rm -f $test.c
if ! test -f fail; then
  test -s warn || rm -f warn
  if timeout 1h $valgrind ./$test 2> $log > $out; then
    if test -f $test.$ref; then
      ref=$ref
    else
      ref=ref
    fi
    if test -f $test.\$ref; then
        echo diff $log $test.\$ref > fail
        diff $log $test.\$ref >> fail && rm -f fail
        rm -f $test.\$ref
    fi
  else
    cp -f $log fail
  fi
  if ! test -f fail; then
    touch pass
  fi
fi
rm -f $test $test.c $test.sh $test.*ref
tar czf \$HOME/$chksum.tgz *
rm -r -f \$HOME/$chksum
EOF
    tar czf $chksum.tgz $chksum
    rm -r -f $chksum
    scp -q $chksum.tgz $rhost: && rm -f $chksum.tgz
    ssh $rhost sh -c "\"tar xmzf $chksum.tgz && cd $chksum && tsp -n -f sh $test.sh\""
    scp -q $rhost:$chksum.tgz $chksum.tgz
    ssh $rhost rm -r -f $chksum.tgz
    tar xmzf $chksum.tgz
    rm -f $chksum.tgz $test.c $test.*ref pid
    expirecache
    if test -f fail; then
	echo
	echo \[$test.$ext\]
	cat fail
	if test -n "$MAINTAINER"; then
	    (
		echo Latest change:
		echo
		darcs changes --last=1
		echo
		if test -f ../$test.c.page; then
		    cat <<EOF
See http://basilisk.fr/$dir/$test.c
EOF
		else
		    cat fail
		fi 
	    ) | mail -s "basilisk: $test.$ext failed" $MAINTAINER
	fi
    fi
    cd ..
    # generate graphics
    if test -f $test.plot; then
	make $test/plot.png
    fi
}

if test -f $test.$ext && $CHECKSUM $test.$ext; then
    touch $test.$ext
    echo "make: '$test' is up to date."
else
    rm -f $test.$ext $test/pass $test/fail $test/warn $test/plot.png
    expirecache
    mkdir -p $test && cp -f $test.c $test
    cp -f $test.*ref $test 2> /dev/null || true
    if test -d $BASILISK_WIKI/static -a \
	-f $test.c.page -a \
	! -L $BASILISK_WIKI/static/$dir/$test; then
	ln -s $PWD/$test $BASILISK_WIKI/static/$dir/$test
    fi

    if test -n "$SANDBOX"; then
        ( remotely $SANDBOX ) &
	echo $SANDBOX \($!\) > $test/pid
    else
	locally
    fi

    $GENSUM $test.s > $test.$ext
fi

if test -f $test/fail; then
    cat $test/fail
    rm -f $test.$ext
    exit 1
elif test -f $test/pid; then
    echo \[$test.$ext on `cat $test/pid`\]
    echo "  running..."
fi
