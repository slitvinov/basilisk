#!/bin/sh

test=`echo $1 | cut -d. -f1`
ext=`echo $1 | cut -d. -f2`
case $ext in
    stst) log=slog; out=out  ;;
    ctst) log=clog; out=cout ;;
    *)    log=log;  out=out  ;;
esac
valgrind=$2

script()
{
    cat <<EOF
#!/bin/sh
\$BASILISK/qcc $CFLAGS -o $test $test.c $LIBS -lm > warn 2>&1 || cp -f warn fail
if $valgrind ./$test 2> $log > $out; then
    if test -f $test.ref; then
        if test $log = log; then
            diff $log $test.ref > fail && rm -f fail
        elif test $log = slog; then
            diff $log $test.ref
        fi
    fi
else
    cp $log fail
fi
if test -f fail; then
    cat fail
else
    touch pass
fi
EOF
}

# run locally
local()
{
    cd $test
    echo qcc $CFLAGS -o $test/$test $test.c $LIBS -lm;
    script | sh
    rm -f $test.c $test.ref
    cd ..
}

# run on a remote system
remote()
{
    set -e
    rhost=$1
    chksum=`$GENSUM $test.s | cut -d' ' -f1`
    cd $test
    mkdir $chksum
    cp -f $test.c $test.ref $chksum
    script > $chksum/$test.sh
cat <<EOF >> $chksum/$test.sh
rm -f $test.c $test.sh $test.ref
tar czf \$HOME/$chksum.tgz *
rm -r -f \$HOME/$chksum
EOF
    tar czf $chksum.tgz $chksum
    rm -r -f $chksum
    scp -q $chksum.tgz $rhost: && rm -f $chksum.tgz
    ssh $rhost sh -c "\"tar xzf $chksum.tgz && cd $chksum && sh $test.sh\""
    scp -q $rhost:$chksum.tgz $chksum.tgz
    ssh $rhost rm -r -f $chksum.tgz
    tar xzf $chksum.tgz
    rm -f $chksum.tgz $test.c $test.ref pid
    cd ..
}

set -e

if test -f $test.$ext && $CHECKSUM $test.$ext; then
    touch $test.$ext
    echo "make: '$test' is up to date."
else
    rm -f $test.$ext
    mkdir -p $test && cp -f $test.c $test.ref $test
    rm -f $test/pass $test/fail

    if test -n "$REMOTE"; then
	echo \[$test.$ext on $REMOTE\]
	remote $REMOTE &
	echo $! > $test/pid
    else
	echo \[$test.$ext\]
	local
    fi

    if test -f $test/fail; then
	exit 1
    fi
    $GENSUM $test.s > $test.$ext;
fi
